enum Frequency {
  DAILY
  MONTHLY
  YEARLY
}

type User {
  email: String!
  name: String!
  givenName: String!
  familyName: String!
  picture: String!
}

type CreditCard {
  id: ID!
  enabled: Boolean!
  type: String!
  number: Int
}

type Tag {
  id: ID!
  enabled: Boolean!
  name: String!
}

type Subscription {
  id: ID!
  enabled: Boolean!
  title: String!
  price: Float!
  currency: String!
  tags: [Tag]
  frequency: Frequency!
  creditCard: CreditCard
  image: String
}

type Query {
  me: User!

  subscription(id: ID!): Subscription
  subscriptions: [Subscription]

  creditCard(id: ID!): CreditCard
  creditCards: [CreditCard]

  tag(id: ID!): Tag
  tags: [Tag]
}

type Mutation {
  createCreditCard(type: String!, number: Int): CreditCard!
  updateCreditCardById(id: ID!, type: String!, number: Int): CreditCard!
  deleteCreditCardById(id: ID!): CreditCard!

  createTag(name: String!): Tag!
  updateTagById(id: ID!, name: String!): Tag!
  deleteTagById(id: ID!): Tag!

  createSubscription(
    title: String!
    price: Float!
    currency: String!
    frequency: Frequency!
    creditCardId: String
    tags: [String]
    image: String
  ): Subscription!
  updateSubscriptionById(
    id: ID!
    title: String!
    price: Float!
    currency: String!
    frequency: Frequency!
    creditCardId: String
    tags: [String]
    image: String
  ): Subscription!
  deleteSubscriptionById(id: ID!): Subscription!
}
