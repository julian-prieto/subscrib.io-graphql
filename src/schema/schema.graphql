enum Frecuency {
  DAILY
  MONTHLY
  YEARLY
}

type GenericResponse {
  action: String!
  success: Boolean
  message: String!
}

union DeleteTagByIdResponse = GenericResponse | Tag
union DeleteSubscriptionByIdResponse = GenericResponse | Subscription

type CreditCard {
  id: ID!
  enabled: Boolean!
  createdAt: String!
  updatedAt: String!
  owner: String!
  type: String!
  number: Int
}

type Tag {
  id: ID!
  enabled: Boolean!
  createdAt: String!
  updatedAt: String!
  owner: String!
  name: String!
}

type Subscription {
  id: ID!
  enabled: Boolean!
  createdAt: String!
  updatedAt: String!
  owner: String!
  title: String!
  price: Float!
  currency: String!
  tags: [Tag]
  frecuency: Frecuency!
  creditCard: CreditCard
}

type Query {
  subscription(id: ID!): Subscription
  subscriptions: [Subscription]
  creditCard(id: ID!): CreditCard
  creditCards: [CreditCard]
  tag(id: ID!): Tag
  tags: [Tag]
}

type Mutation {
  createCreditCard(owner: String!, type: String!, number: Int): CreditCard!
  createTag(owner: String!, name: String!): Tag!
  deleteTagById(owner: String!, id: ID!): DeleteTagByIdResponse!
  deleteSubscriptionById(owner: String!, id: ID!): DeleteSubscriptionByIdResponse!
  createSubscription(
    owner: String!
    title: String!
    price: Float!
    currency: String!
    frecuency: Frecuency!
    creditCardId: String
    tags: [String]
  ): Subscription!
}
